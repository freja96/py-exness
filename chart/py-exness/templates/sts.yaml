apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "py-exness.fullname" . }}
  labels:
    {{- include "py-exness.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "py-exness.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "py-exness.fullname" . }}
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "py-exness.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: init-db
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        volumeMounts:
        - name: {{ include "py-exness.fullname" . }}-pvc
          mountPath: /app/data
        command: ['python','init_db.py']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            #command: ['sh', '-c', 'echo The app is running! && sleep 36000']
          workingDir: "/app"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "py-exness.fullname" . }}-pvc
            mountPath: /app/data
  volumeClaimTemplates:
  - metadata:
      name: {{ include "py-exness.fullname" . }}-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
